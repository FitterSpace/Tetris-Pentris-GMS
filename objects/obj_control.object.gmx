<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-75</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0
alarm[0] = room_speed/2
alarm[2] = room_speed/2 // so the first piece doesn't start falling too soon.
randomize()

NextPiece = 0
NextPiece2 = 0
NextPiece3 = 0

// Time in centiseconds
global.Time = 0
alarm[3] = room_speed/10

// Music
if global.music = 1 {audio_play_sound(mus_a,10,true)}
if global.music = 2 {audio_play_sound(mus_b,10,true)}
if global.music = 3 {audio_play_sound(mus_c,10,true)}

// Lines needed to win B-Type
if (room == rm_Tetris_BType) 
or (room == rm_Pentris_BType) 
or (room == rm_Tetris_Variety_BType)
or (room == rm_Pentris_Variety_BType) {
    global.lines = 25
} else {
    global.lines = 0
}

// Starting level
//global.StartLevel = 0
global.level = global.StartLevel

// Number of lines needed to reach the next level. 999 for B-Type.
if (room == rm_Tetris_AType) 
or (room == rm_Pentris_AType) 
or (room == rm_Tetris_Variety)
or (room == rm_Pentris_Variety)
{
    global.NextLevel = min((global.StartLevel*10)+10, max(100,(global.StartLevel*10)-50))
} else {
    global.NextLevel = 999
}

// Initialize variable. Changes later.
global.Piece_Gravity = 1

// Board Height and Width
if (room == rm_Tetris_AType) 
or (room == rm_Tetris_BType) 
or (room == rm_Tetris_Variety)
or (room == rm_Tetris_Variety_BType) {
    global.BOARD_WIDTH = 10
    global.BOARD_HEIGHT = 20
    global.BOARD_LEFT = obj_top.x
    global.BOARD_TOP = obj_top.y
} else {
    global.BOARD_WIDTH = 12
    global.BOARD_HEIGHT = 24
    global.BOARD_LEFT = obj_top_pentris.x
    global.BOARD_TOP = obj_top_pentris.y
}

// Delayed Auto-shift (DAS) timings
global.DAS = room_speed/6
global.DAS_Timer = room_speed/6
global.DAS_Speed = room_speed/20

// Initializing Stats
global.Stats[0,0] = "I: "
global.Stats[1,0] = "J: "
global.Stats[2,0] = "L: "
global.Stats[3,0] = "O: "
global.Stats[4,0] = "S: "
global.Stats[5,0] = "T: "
global.Stats[6,0] = "Z: "
global.Stats[7,0] = "PF: "
global.Stats[8,0] = "PFi: "
global.Stats[9,0] = "PI: "
global.Stats[10,0] = "PJ: "
global.Stats[11,0] = "PL: "
global.Stats[12,0] = "PN: "
global.Stats[13,0] = "PNi: "
global.Stats[14,0] = "PP: "
global.Stats[15,0] = "PQ: "
global.Stats[16,0] = "PS: "
global.Stats[17,0] = "PT: "
global.Stats[18,0] = "PU: "
global.Stats[19,0] = "PV: "
global.Stats[20,0] = "PW: "
global.Stats[21,0] = "PX: "
global.Stats[22,0] = "PY: "
global.Stats[23,0] = "PYi: "
global.Stats[24,0] = "PZ: "
global.Stats[25,0] = "3I: "
global.Stats[26,0] = "3L: "
global.Stats[27,0] = "2I: "
global.Stats[28,0] = "1O: "

for(var i = 0; i &lt; array_height_2d(global.Stats); i++) {
    global.Stats[i,1] = 0
}

// Random piece for Tetris A-Type and B-Type
if (room == rm_Tetris_AType) or (room == rm_Tetris_BType) {

    var a = 1 + irandom(6)
    var b = 1 + irandom(6)
    var c = 1 + irandom(6)

    if a = 1 {NextPiece = obj_T}
    else if a = 2 {NextPiece = obj_I}
    else if a = 3 {NextPiece = obj_fall}
    else if a = 4 {NextPiece = obj_L}
    else if a = 5 {NextPiece = obj_J}
    else if a = 6 {NextPiece = obj_S}
    else if a = 7 {NextPiece = obj_Z}

    if b = 1 {NextPiece2 = obj_T}
    else if b = 2 {NextPiece2 = obj_I}
    else if b = 3 {NextPiece2 = obj_fall}
    else if b = 4 {NextPiece2 = obj_L}
    else if b = 5 {NextPiece2 = obj_J}
    else if b = 6 {NextPiece2 = obj_S}
    else if b = 7 {NextPiece2 = obj_Z}

    if c = 1 {NextPiece3 = obj_T}
    else if c = 2 {NextPiece3 = obj_I}
    else if c = 3 {NextPiece3 = obj_fall}
    else if c = 4 {NextPiece3 = obj_L}
    else if c = 5 {NextPiece3 = obj_J}
    else if c = 6 {NextPiece3 = obj_S}
    else if c = 7 {NextPiece3 = obj_Z}
    
} 

// Random piece for Pentris A-Type and B-Type
if (room == rm_Pentris_AType) or (room == rm_Pentris_BType) {

    var a = 1 + irandom(17)
    var b = 1 + irandom(17)
    var c = 1 + irandom(17)

    if a = 1 {NextPiece = obj_PF}
    else if a = 2 {NextPiece = obj_PFi}
    else if a = 3 {NextPiece = obj_PI}
    else if a = 4 {NextPiece = obj_PJ}
    else if a = 5 {NextPiece = obj_PL}
    else if a = 6 {NextPiece = obj_PN}
    else if a = 7 {NextPiece = obj_PNi}
    else if a = 8 {NextPiece = obj_PP}
    else if a = 9 {NextPiece = obj_PQ}
    else if a = 10 {NextPiece = obj_PS}
    else if a = 11 {NextPiece = obj_PT}
    else if a = 12 {NextPiece = obj_PU}
    else if a = 13 {NextPiece = obj_PV}
    else if a = 14 {NextPiece = obj_PW}
    else if a = 15 {NextPiece = obj_PX}
    else if a = 16 {NextPiece = obj_PY}
    else if a = 17 {NextPiece = obj_PYi}
    else if a = 18 {NextPiece = obj_PZ}

    if b = 1 {NextPiece2 = obj_PF}
    else if b = 2 {NextPiece2 = obj_PFi}
    else if b = 3 {NextPiece2 = obj_PI}
    else if b = 4 {NextPiece2 = obj_PJ}
    else if b = 5 {NextPiece2 = obj_PL}
    else if b = 6 {NextPiece2 = obj_PN}
    else if b = 7 {NextPiece2 = obj_PNi}
    else if b = 8 {NextPiece2 = obj_PP}
    else if b = 9 {NextPiece2 = obj_PQ}
    else if b = 10 {NextPiece2 = obj_PS}
    else if b = 11 {NextPiece2 = obj_PT}
    else if b = 12 {NextPiece2 = obj_PU}
    else if b = 13 {NextPiece2 = obj_PV}
    else if b = 14 {NextPiece2 = obj_PW}
    else if b = 15 {NextPiece2 = obj_PX}
    else if b = 16 {NextPiece2 = obj_PY}
    else if b = 17 {NextPiece2 = obj_PYi}
    else if b = 18 {NextPiece2 = obj_PZ}

    if c = 1 {NextPiece3 = obj_PF}
    else if c = 2 {NextPiece3 = obj_PFi}
    else if c = 3 {NextPiece3 = obj_PI}
    else if c = 4 {NextPiece3 = obj_PJ}
    else if c = 5 {NextPiece3 = obj_PL}
    else if c = 6 {NextPiece3 = obj_PN}
    else if c = 7 {NextPiece3 = obj_PNi}
    else if c = 8 {NextPiece3 = obj_PP}
    else if c = 9 {NextPiece3 = obj_PQ}
    else if c = 10 {NextPiece3 = obj_PS}
    else if c = 11 {NextPiece3 = obj_PT}
    else if c = 12 {NextPiece3 = obj_PU}
    else if c = 13 {NextPiece3 = obj_PV}
    else if c = 14 {NextPiece3 = obj_PW}
    else if c = 15 {NextPiece3 = obj_PX}
    else if c = 16 {NextPiece3 = obj_PY}
    else if c = 17 {NextPiece3 = obj_PYi}
    else if c = 18 {NextPiece3 = obj_PZ}
    
}

// Random piece for Tetris Variety (includes smaller pieces)
if (room == rm_Tetris_Variety) or (room == rm_Tetris_Variety_BType) {

    var a = 1 + irandom(10)
    var b = 1 + irandom(10)
    var c = 1 + irandom(10)

    if a = 1 {NextPiece = obj_T}
    else if a = 2 {NextPiece = obj_I}
    else if a = 3 {NextPiece = obj_fall}
    else if a = 4 {NextPiece = obj_L}
    else if a = 5 {NextPiece = obj_J}
    else if a = 6 {NextPiece = obj_S}
    else if a = 7 {NextPiece = obj_Z}
    else if a = 8 {NextPiece = obj_3I}
    else if a = 9 {NextPiece = obj_3L}
    else if a = 10 {NextPiece = obj_2I}
    else if a = 11 {NextPiece = obj_1O}

    if b = 1 {NextPiece2 = obj_T}
    else if b = 2 {NextPiece2 = obj_I}
    else if b = 3 {NextPiece2 = obj_fall}
    else if b = 4 {NextPiece2 = obj_L}
    else if b = 5 {NextPiece2 = obj_J}
    else if b = 6 {NextPiece2 = obj_S}
    else if b = 7 {NextPiece2 = obj_Z}
    else if b = 8 {NextPiece2 = obj_3I}
    else if b = 9 {NextPiece2 = obj_3L}
    else if b = 10 {NextPiece2 = obj_2I}
    else if b = 11 {NextPiece2 = obj_1O}

    if c = 1 {NextPiece3 = obj_T}
    else if c = 2 {NextPiece3 = obj_I}
    else if c = 3 {NextPiece3 = obj_fall}
    else if c = 4 {NextPiece3 = obj_L}
    else if c = 5 {NextPiece3 = obj_J}
    else if c = 6 {NextPiece3 = obj_S}
    else if c = 7 {NextPiece3 = obj_Z}
    else if c = 8 {NextPiece3 = obj_3I}
    else if c = 9 {NextPiece3 = obj_3L}
    else if c = 10 {NextPiece3 = obj_2I}
    else if c = 11 {NextPiece3 = obj_1O}
    
} 

// Random piece for Pentris Variety (includes smaller pieces)
if (room == rm_Pentris_Variety) or (room == rm_Pentris_Variety_BType) {

    var a = 1 + irandom(28)
    var b = 1 + irandom(28)
    var c = 1 + irandom(28)

    if a = 1 {NextPiece = obj_PF}
    else if a = 2 {NextPiece = obj_PFi}
    else if a = 3 {NextPiece = obj_PI}
    else if a = 4 {NextPiece = obj_PJ}
    else if a = 5 {NextPiece = obj_PL}
    else if a = 6 {NextPiece = obj_PN}
    else if a = 7 {NextPiece = obj_PNi}
    else if a = 8 {NextPiece = obj_PP}
    else if a = 9 {NextPiece = obj_PQ}
    else if a = 10 {NextPiece = obj_PS}
    else if a = 11 {NextPiece = obj_PT}
    else if a = 12 {NextPiece = obj_PU}
    else if a = 13 {NextPiece = obj_PV}
    else if a = 14 {NextPiece = obj_PW}
    else if a = 15 {NextPiece = obj_PX}
    else if a = 16 {NextPiece = obj_PY}
    else if a = 17 {NextPiece = obj_PYi}
    else if a = 18 {NextPiece = obj_PZ}
    else if a = 19 {NextPiece = obj_T}
    else if a = 20 {NextPiece = obj_I}
    else if a = 21 {NextPiece = obj_fall}
    else if a = 22 {NextPiece = obj_L}
    else if a = 23 {NextPiece = obj_J}
    else if a = 24 {NextPiece = obj_S}
    else if a = 25 {NextPiece = obj_Z}
    else if a = 26 {NextPiece = obj_3I}
    else if a = 27 {NextPiece = obj_3L}
    else if a = 28 {NextPiece = obj_2I}
    else if a = 29 {NextPiece = obj_1O}

    if b = 1 {NextPiece2 = obj_PF}
    else if b = 2 {NextPiece2 = obj_PFi}
    else if b = 3 {NextPiece2 = obj_PI}
    else if b = 4 {NextPiece2 = obj_PJ}
    else if b = 5 {NextPiece2 = obj_PL}
    else if b = 6 {NextPiece2 = obj_PN}
    else if b = 7 {NextPiece2 = obj_PNi}
    else if b = 8 {NextPiece2 = obj_PP}
    else if b = 9 {NextPiece2 = obj_PQ}
    else if b = 10 {NextPiece2 = obj_PS}
    else if b = 11 {NextPiece2 = obj_PT}
    else if b = 12 {NextPiece2 = obj_PU}
    else if b = 13 {NextPiece2 = obj_PV}
    else if b = 14 {NextPiece2 = obj_PW}
    else if b = 15 {NextPiece2 = obj_PX}
    else if b = 16 {NextPiece2 = obj_PY}
    else if b = 17 {NextPiece2 = obj_PYi}
    else if b = 18 {NextPiece2 = obj_PZ}
    else if b = 19 {NextPiece2 = obj_T}
    else if b = 20 {NextPiece2 = obj_I}
    else if b = 21 {NextPiece2 = obj_fall}
    else if b = 22 {NextPiece2 = obj_L}
    else if b = 23 {NextPiece2 = obj_J}
    else if b = 24 {NextPiece2 = obj_S}
    else if b = 25 {NextPiece2 = obj_Z}
    else if b = 26 {NextPiece2 = obj_3I}
    else if b = 27 {NextPiece2 = obj_3L}
    else if b = 28 {NextPiece2 = obj_2I}
    else if b = 29 {NextPiece2 = obj_1O}

    if c = 1 {NextPiece3 = obj_PF}
    else if c = 2 {NextPiece3 = obj_PFi}
    else if c = 3 {NextPiece3 = obj_PI}
    else if c = 4 {NextPiece3 = obj_PJ}
    else if c = 5 {NextPiece3 = obj_PL}
    else if c = 6 {NextPiece3 = obj_PN}
    else if c = 7 {NextPiece3 = obj_PNi}
    else if c = 8 {NextPiece3 = obj_PP}
    else if c = 9 {NextPiece3 = obj_PQ}
    else if c = 10 {NextPiece3 = obj_PS}
    else if c = 11 {NextPiece3 = obj_PT}
    else if c = 12 {NextPiece3 = obj_PU}
    else if c = 13 {NextPiece3 = obj_PV}
    else if c = 14 {NextPiece3 = obj_PW}
    else if c = 15 {NextPiece3 = obj_PX}
    else if c = 16 {NextPiece3 = obj_PY}
    else if c = 17 {NextPiece3 = obj_PYi}
    else if c = 18 {NextPiece3 = obj_PZ}
    else if c = 19 {NextPiece3 = obj_T}
    else if c = 20 {NextPiece3 = obj_I}
    else if c = 21 {NextPiece3 = obj_fall}
    else if c = 22 {NextPiece3 = obj_L}
    else if c = 23 {NextPiece3 = obj_J}
    else if c = 24 {NextPiece3 = obj_S}
    else if c = 25 {NextPiece3 = obj_Z}
    else if c = 26 {NextPiece3 = obj_3I}
    else if c = 27 {NextPiece3 = obj_3L}
    else if c = 28 {NextPiece3 = obj_2I}
    else if c = 29 {NextPiece3 = obj_1O}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>To-do list:</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
tetris to-do list:

[UI]
-Allow holding the d-pad to flick through options more quickly so you don't have to keep pressing it.
-Add a timer at the bottom-right side of the game screen.

[Gameplay]

[Features]
-Add a speedrun mode with goals such as "fastest 100,000", "fastest B-type clear", stuff like that.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Timer</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Time += 1
alarm[3] = room_speed/10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Delay the first piece from falling</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_fall.alarm[1] += (room_speed/2) + (room_speed/4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Return to Menu</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room = rm_newscore
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Piece Generation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creating whatever the next piece is
if NextPiece = obj_T {
    instance_create(x-16,y-16,obj_T)
    global.Stats[5,1] += 1
}
else if NextPiece = obj_I {
    instance_create(x-32,y-32,obj_I)
    global.Stats[0,1] += 1
}
else if NextPiece = obj_fall {
    instance_create(x-32,y-32,obj_fall)
    global.Stats[3,1] += 1
}
else if NextPiece = obj_L {
    instance_create(x-16,y-16,obj_L)
    global.Stats[2,1] += 1
}
else if NextPiece = obj_J {
    instance_create(x-16,y-16,obj_J)
    global.Stats[1,1] += 1
}
else if NextPiece = obj_S {
    instance_create(x-16,y-16,obj_S)
    global.Stats[4,1] += 1
}
else if NextPiece = obj_Z {
    instance_create(x-16,y-16,obj_Z)
    global.Stats[6,1] += 1
}
else if NextPiece = obj_PF {
    instance_create(x-16,y-48,obj_PF)
    global.Stats[7,1] += 1
}
else if NextPiece = obj_PFi {
    instance_create(x-16,y-48,obj_PFi)
    global.Stats[8,1] += 1
}
else if NextPiece = obj_PI {
    instance_create(x-16,y-48,obj_PI)
    global.Stats[9,1] += 1
}
else if NextPiece = obj_PJ {
    instance_create(x-32,y-32,obj_PJ)
    global.Stats[10,1] += 1
}
else if NextPiece = obj_PL {
    instance_create(x-32,y-32,obj_PL)
    global.Stats[11,1] += 1
}
else if NextPiece = obj_PN {
    instance_create(x-32,y-32,obj_PN)
    global.Stats[12,1] += 1
}
else if NextPiece = obj_PNi {
    instance_create(x-32,y-32,obj_PNi)
    global.Stats[13,1] += 1
}
else if NextPiece = obj_PP {
    instance_create(x-16,y-48,obj_PP)
    global.Stats[14,1] += 1
}
else if NextPiece = obj_PQ {
    instance_create(x-16,y-48,obj_PQ)
    global.Stats[15,1] += 1
}
else if NextPiece = obj_PS {
    instance_create(x-16,y-48,obj_PS)
    global.Stats[16,1] += 1
}
else if NextPiece = obj_PT {
    instance_create(x-16,y-48,obj_PT)
    global.Stats[17,1] += 1
}
else if NextPiece = obj_PU {
    instance_create(x-16,y-48,obj_PU)
    global.Stats[18,1] += 1
}
else if NextPiece = obj_PV {
    instance_create(x-16,y-48,obj_PV)
    global.Stats[19,1] += 1
}
else if NextPiece = obj_PW {
    instance_create(x-16,y-48,obj_PW)
    global.Stats[20,1] += 1
}
else if NextPiece = obj_PX {
    instance_create(x-16,y-48,obj_PX)
    global.Stats[21,1] += 1
}
else if NextPiece = obj_PY {
    instance_create(x-32,y-32,obj_PY)
    global.Stats[22,1] += 1
}
else if NextPiece = obj_PYi {
    instance_create(x-32,y-32,obj_PYi)
    global.Stats[23,1] += 1
}
else if NextPiece = obj_PZ {
    instance_create(x-16,y-48,obj_PZ)
    global.Stats[24,1] += 1
}
else if NextPiece = obj_3I {
    instance_create(x-16,y-48,obj_3I)
    global.Stats[25,1] += 1
}
else if NextPiece = obj_3L {
    instance_create(x-32,y-32,obj_3L)
    global.Stats[26,1] += 1
}
else if NextPiece = obj_2I {
    instance_create(x-32,y-32,obj_2I)
    global.Stats[27,1] += 1
}
else if NextPiece = obj_1O {
    instance_create(x-16,y-48,obj_1O)
    global.Stats[28,1] += 1
}

NextPiece = NextPiece2
NextPiece2 = NextPiece3
//NextPiece3 = choose(obj_T, obj_I, obj_fall, obj_L, obj_J, obj_S, obj_Z)


// Generating a new 3rd piece for Tetris

if (room == rm_Tetris_AType) or (room == rm_Tetris_BType) {
    var c = 1 + irandom(6)

    if c = 1 {NextPiece3 = obj_T}
    else if c = 2 {NextPiece3 = obj_I}
    else if c = 3 {NextPiece3 = obj_fall}
    else if c = 4 {NextPiece3 = obj_L}
    else if c = 5 {NextPiece3 = obj_J}
    else if c = 6 {NextPiece3 = obj_S}
    else if c = 7 {NextPiece3 = obj_Z}
    
    // If the next 3 pieces are the same, generate a new 3rd piece.
    while (NextPiece == NextPiece2) and (NextPiece2 == NextPiece3) {
        var c = 1 + irandom(6)

        if c = 1 {NextPiece3 = obj_T}
        else if c = 2 {NextPiece3 = obj_I}
        else if c = 3 {NextPiece3 = obj_fall}
        else if c = 4 {NextPiece3 = obj_L}
        else if c = 5 {NextPiece3 = obj_J}
        else if c = 6 {NextPiece3 = obj_S}
        else if c = 7 {NextPiece3 = obj_Z}
    } 
}

// Generating a new 3rd piece for Pentris
if (room == rm_Pentris_AType) or (room == rm_Pentris_BType) {
    var c = 1 + irandom(17)

    if c = 1 {NextPiece3 = obj_PF}
    else if c = 2 {NextPiece3 = obj_PFi}
    else if c = 3 {NextPiece3 = obj_PI}
    else if c = 4 {NextPiece3 = obj_PJ}
    else if c = 5 {NextPiece3 = obj_PL}
    else if c = 6 {NextPiece3 = obj_PN}
    else if c = 7 {NextPiece3 = obj_PNi}
    else if c = 8 {NextPiece3 = obj_PP}
    else if c = 9 {NextPiece3 = obj_PQ}
    else if c = 10 {NextPiece3 = obj_PS}
    else if c = 11 {NextPiece3 = obj_PT}
    else if c = 12 {NextPiece3 = obj_PU}
    else if c = 13 {NextPiece3 = obj_PV}
    else if c = 14 {NextPiece3 = obj_PW}
    else if c = 15 {NextPiece3 = obj_PX}
    else if c = 16 {NextPiece3 = obj_PY}
    else if c = 17 {NextPiece3 = obj_PYi}
    else if c = 18 {NextPiece3 = obj_PZ}
    
    // If the next 3 pieces are the same, generate a new 3rd piece.
    while (NextPiece == NextPiece2) and (NextPiece2 == NextPiece3) {
        var c = 1 + irandom(17)

        if c = 1 {NextPiece3 = obj_PF}
        else if c = 2 {NextPiece3 = obj_PFi}
        else if c = 3 {NextPiece3 = obj_PI}
        else if c = 4 {NextPiece3 = obj_PJ}
        else if c = 5 {NextPiece3 = obj_PL}
        else if c = 6 {NextPiece3 = obj_PN}
        else if c = 7 {NextPiece3 = obj_PNi}
        else if c = 8 {NextPiece3 = obj_PP}
        else if c = 9 {NextPiece3 = obj_PQ}
        else if c = 10 {NextPiece3 = obj_PS}
        else if c = 11 {NextPiece3 = obj_PT}
        else if c = 12 {NextPiece3 = obj_PU}
        else if c = 13 {NextPiece3 = obj_PV}
        else if c = 14 {NextPiece3 = obj_PW}
        else if c = 15 {NextPiece3 = obj_PX}
        else if c = 16 {NextPiece3 = obj_PY}
        else if c = 17 {NextPiece3 = obj_PYi}
        else if c = 18 {NextPiece3 = obj_PZ}
    } 
}


// Generating a new 3rd piece for Tetris Variety
if (room == rm_Tetris_Variety) or (room == rm_Tetris_Variety_BType) {
    var c = 1 + irandom(10)

    if c = 1 {NextPiece3 = obj_T}
    else if c = 2 {NextPiece3 = obj_I}
    else if c = 3 {NextPiece3 = obj_fall}
    else if c = 4 {NextPiece3 = obj_L}
    else if c = 5 {NextPiece3 = obj_J}
    else if c = 6 {NextPiece3 = obj_S}
    else if c = 7 {NextPiece3 = obj_Z}
    else if c = 8 {NextPiece3 = obj_3I}
    else if c = 9 {NextPiece3 = obj_3L}
    else if c = 10 {NextPiece3 = obj_2I}
    else if c = 11 {NextPiece3 = obj_1O}
    
    // If the next 3 pieces are the same, generate a new 3rd piece.
    while (NextPiece == NextPiece2) and (NextPiece2 == NextPiece3) {
        var c = 1 + irandom(10)

        if c = 1 {NextPiece3 = obj_T}
        else if c = 2 {NextPiece3 = obj_I}
        else if c = 3 {NextPiece3 = obj_fall}
        else if c = 4 {NextPiece3 = obj_L}
        else if c = 5 {NextPiece3 = obj_J}
        else if c = 6 {NextPiece3 = obj_S}
        else if c = 7 {NextPiece3 = obj_Z}
        else if c = 8 {NextPiece3 = obj_3I}
        else if c = 9 {NextPiece3 = obj_3L}
        else if c = 10 {NextPiece3 = obj_2I}
        else if c = 11 {NextPiece3 = obj_1O}
    } 
}

if (room == rm_Pentris_Variety) or (room == rm_Pentris_Variety_BType) {

    var a = 1 + irandom(28)

    if a = 1 {NextPiece3 = obj_PF}
    else if a = 2 {NextPiece3 = obj_PFi}
    else if a = 3 {NextPiece3 = obj_PI}
    else if a = 4 {NextPiece3 = obj_PJ}
    else if a = 5 {NextPiece3 = obj_PL}
    else if a = 6 {NextPiece3 = obj_PN}
    else if a = 7 {NextPiece3 = obj_PNi}
    else if a = 8 {NextPiece3 = obj_PP}
    else if a = 9 {NextPiece3 = obj_PQ}
    else if a = 10 {NextPiece3 = obj_PS}
    else if a = 11 {NextPiece3 = obj_PT}
    else if a = 12 {NextPiece3 = obj_PU}
    else if a = 13 {NextPiece3 = obj_PV}
    else if a = 14 {NextPiece3 = obj_PW}
    else if a = 15 {NextPiece3 = obj_PX}
    else if a = 16 {NextPiece3 = obj_PY}
    else if a = 17 {NextPiece3 = obj_PYi}
    else if a = 18 {NextPiece3 = obj_PZ}
    else if a = 19 {NextPiece3 = obj_T}
    else if a = 20 {NextPiece3 = obj_I}
    else if a = 21 {NextPiece3 = obj_fall}
    else if a = 22 {NextPiece3 = obj_L}
    else if a = 23 {NextPiece3 = obj_J}
    else if a = 24 {NextPiece3 = obj_S}
    else if a = 25 {NextPiece3 = obj_Z}
    else if a = 26 {NextPiece3 = obj_3I}
    else if a = 27 {NextPiece3 = obj_3L}
    else if a = 28 {NextPiece3 = obj_2I}
    else if a = 29 {NextPiece3 = obj_1O}
    
    while (NextPiece == NextPiece2) and (NextPiece2 == NextPiece3) {
        var a = 1 + irandom(28)

        if a = 1 {NextPiece3 = obj_PF}
        else if a = 2 {NextPiece3 = obj_PFi}
        else if a = 3 {NextPiece3 = obj_PI}
        else if a = 4 {NextPiece3 = obj_PJ}
        else if a = 5 {NextPiece3 = obj_PL}
        else if a = 6 {NextPiece3 = obj_PN}
        else if a = 7 {NextPiece3 = obj_PNi}
        else if a = 8 {NextPiece3 = obj_PP}
        else if a = 9 {NextPiece3 = obj_PQ}
        else if a = 10 {NextPiece3 = obj_PS}
        else if a = 11 {NextPiece3 = obj_PT}
        else if a = 12 {NextPiece3 = obj_PU}
        else if a = 13 {NextPiece3 = obj_PV}
        else if a = 14 {NextPiece3 = obj_PW}
        else if a = 15 {NextPiece3 = obj_PX}
        else if a = 16 {NextPiece3 = obj_PY}
        else if a = 17 {NextPiece3 = obj_PYi}
        else if a = 18 {NextPiece3 = obj_PZ}
        else if a = 19 {NextPiece3 = obj_T}
        else if a = 20 {NextPiece3 = obj_I}
        else if a = 21 {NextPiece3 = obj_fall}
        else if a = 22 {NextPiece3 = obj_L}
        else if a = 23 {NextPiece3 = obj_J}
        else if a = 24 {NextPiece3 = obj_S}
        else if a = 25 {NextPiece3 = obj_Z}
        else if a = 26 {NextPiece3 = obj_3I}
        else if a = 27 {NextPiece3 = obj_3L}
        else if a = 28 {NextPiece3 = obj_2I}
        else if a = 29 {NextPiece3 = obj_1O}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>KEY_LEFT = vk_left
KEY_RIGHT = vk_right

// DAS
if keyboard_check(KEY_LEFT) + keyboard_check(KEY_RIGHT) = 1 
or gamepad_axis_value(4,gp_axislh) != 0 {
    global.DAS -= 1
} else {
    global.DAS = global.DAS_Timer
}

if global.lines &lt; 0 {global.lines = 0}

// Board Height and Width
if (room == rm_Tetris_AType) 
or (room == rm_Tetris_BType) 
or (room == rm_Tetris_Variety)
or (room == rm_Tetris_Variety_BType)
{
    global.BOARD_WIDTH = 10
    global.BOARD_HEIGHT = 20
    global.BOARD_LEFT = obj_top.x
    global.BOARD_TOP = obj_top.y

} else if (room == rm_Pentris_AType) 
or (room == rm_Pentris_BType) 
or (room == rm_Pentris_Variety)
or (room == rm_Pentris_Variety_BType)
{
    global.BOARD_WIDTH = 12
    global.BOARD_HEIGHT = 24
    global.BOARD_LEFT = obj_top_pentris.x
    global.BOARD_TOP = obj_top_pentris.y
}

/*
if global.lines &gt;= global.NextLevel {
    global.level += 1
    global.NextLevel += 10
    audio_play_sound(snd_nextlevel,9,false)
}
*/

// Gravity (number of frames before the piece drops one row)
if global.level = 0 {global.Piece_Gravity = 48}
else if global.level = 1 {global.Piece_Gravity = 43}
else if global.level = 2 {global.Piece_Gravity = 38}
else if global.level = 3 {global.Piece_Gravity = 33}
else if global.level = 4 {global.Piece_Gravity = 28}
else if global.level = 5 {global.Piece_Gravity = 23}
else if global.level = 6 {global.Piece_Gravity = 18}
else if global.level = 7 {global.Piece_Gravity = 13}
else if global.level = 8 {global.Piece_Gravity = 8}
else if global.level = 9 {global.Piece_Gravity = 6}
else if global.level &gt;= 10 and global.level &lt;= 12 {global.Piece_Gravity = 5}
else if global.level &gt;= 13 and global.level &lt;= 15 {global.Piece_Gravity = 4}
else if global.level &gt;= 16 and global.level &lt;= 18 {global.Piece_Gravity = 3}
else if global.level &gt;= 19 and global.level &lt;= 28 {global.Piece_Gravity = 2}
else if global.level &gt;= 29 {global.Piece_Gravity = 1}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_score)
draw_set_colour(c_white)
draw_set_halign(fa_center)
draw_set_valign(fa_center)


//if instance_exists(obj_fall) {
//    draw_text(room_width/2,room_height/2,string(obj_fall.GamePadLeft))
//    draw_text((room_width/2)+32,room_height/2,string(obj_fall.GamePadRight))
//    draw_text((room_width/2)+16,(room_height/2)+32,string(obj_fall.GamePadDown))
//}

//draw_text(room_width/2,room_height-32,string(global.BOARD_WIDTH) + " " + string(global.BOARD_HEIGHT) + " " + string(global.Piece_Gravity))



//NextLevel
//draw_text(room_width-144,room_height-128,"Next Level")
//draw_text(room_width-144,room_height-96,global.NextLevel)

if (room == rm_Tetris_AType) 
or (room == rm_Tetris_BType) 
or (room == rm_Tetris_Variety)
or (room == rm_Tetris_Variety_BType) {
    // Score, Level, and Lines
    draw_text(room_width-128,64,"Score")
    draw_text(room_width-128,96,scr_num_separator(score,",", 3))
    draw_text(room_width-128,534,"Level")
    draw_text(room_width-128,566,global.level)
    draw_text(room_width/2,54,"Lines: " + string(global.lines))
    // Time
    draw_text(room_width-128,664,"Time")
    draw_set_halign(fa_left)
    draw_text(room_width-169,696,scr_timeformat())
    draw_set_halign(fa_center)
    // Next Pieces
    draw_sprite(object_get_sprite(NextPiece),0,room_width-128,240)
    draw_sprite(object_get_sprite(NextPiece2),0,room_width-128,336)
    draw_sprite(object_get_sprite(NextPiece3),0,room_width-128,432)
    
} else if (room == rm_Pentris_AType) 
or (room == rm_Pentris_BType) 
or (room == rm_Pentris_Variety)
or (room == rm_Pentris_Variety_BType) {
    // Score, Level, and Lines
    draw_text(room_width-128,64,"Score")
    draw_text(room_width-128,96,scr_num_separator(score,",", 3))
    draw_text(room_width-128,664,"Level")
    draw_text(room_width-128,696,global.level)
    draw_text(room_width/2,54,"Lines: " + string(global.lines))
    // Next Pieces
    draw_sprite(object_get_sprite(NextPiece),0,room_width-128,240)
    draw_sprite(object_get_sprite(NextPiece2),0,room_width-128,368)
    draw_sprite(object_get_sprite(NextPiece3),0,room_width-128,496)
    // Time
    draw_text(room_width-128,790,"Time")
    draw_set_halign(fa_left)
    draw_text(room_width-169,822,scr_timeformat())
    draw_set_halign(fa_center)
    
}

//Stats
/*
draw_set_halign(fa_left)
for(var i = 0; i &lt; 25; i++) {
    draw_text(144,64+(i*32),string(global.Stats[i,0]) + string(global.Stats[i,1]))
}
*/



/*
// Old Code, Do not use.
if NextPiece = obj_T {draw_sprite(spr_T,0,room_width-128,240)}
else if NextPiece = obj_I {draw_sprite(spr_I,0,room_width-128,240)}
else if NextPiece = obj_fall {draw_sprite(spr_O,0,room_width-128,240)}
else if NextPiece = obj_L {draw_sprite(spr_L,0,room_width-128,240)}
else if NextPiece = obj_J {draw_sprite(spr_J,0,room_width-128,240)}
else if NextPiece = obj_S {draw_sprite(spr_S,0,room_width-128,240)}
else if NextPiece = obj_Z {draw_sprite(spr_Z,0,room_width-128,240)}

if NextPiece2 = obj_T {draw_sprite_ext(spr_T,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_I {draw_sprite_ext(spr_I,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_fall {draw_sprite_ext(spr_O,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_L {draw_sprite_ext(spr_L,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_J {draw_sprite_ext(spr_J,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_S {draw_sprite_ext(spr_S,0,room_width-128,336,0.5,0.5,0,c_white,1)}
else if NextPiece2 = obj_Z {draw_sprite_ext(spr_Z,0,room_width-128,336,0.5,0.5,0,c_white,1)}

if NextPiece3 = obj_T {draw_sprite_ext(spr_T,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_I {draw_sprite_ext(spr_I,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_fall {draw_sprite_ext(spr_O,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_L {draw_sprite_ext(spr_L,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_J {draw_sprite_ext(spr_J,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_S {draw_sprite_ext(spr_S,0,room_width-128,432,0.5,0.5,0,c_white,1)}
else if NextPiece3 = obj_Z {draw_sprite_ext(spr_Z,0,room_width-128,432,0.5,0.5,0,c_white,1)}
*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(mus_a)
audio_stop_sound(mus_b)
audio_stop_sound(mus_c)
audio_stop_sound(mus_a_fast)
audio_stop_sound(mus_a_fast)
audio_stop_sound(mus_a_fast)

room_restart()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
