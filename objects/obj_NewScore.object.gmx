<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.CurrentName = "" // will be defined 
audio_play_sound(mus_highscore,10,true)
keyboard_string = ""

// Loading the player's high scores (if they exist)

if file_exists("TetrisA.ini") {scr_iniopen(string(global.GameSelection))}
    else {scr_defaultscores(string(global.GameSelection))}

ds_grid_sort(grid,1,false)


// skip the name entry screen if you didn't get a high score
if score &lt;= ds_grid_get(grid,1,9) {room = rm_highscore}      

/*
// Tetris A-Type
if global.GameSelection == rm_Tetris_AType {
    if file_exists("TetrisA.ini") {scr_iniopen("TetrisA")} 
    else {scr_defaultscores("TetrisA")}
    
// Tetris B-Type 
} else if global.GameSelection == rm_Tetris_BType {
    if file_exists("TetrisA.ini") {scr_iniopen("TetrisB")} 
    else {scr_defaultscores("TetrisB")}
    
// Tetris Variety
} else if global.GameSelection == rm_Tetris_Variety {
    if file_exists("TetrisA.ini") {scr_iniopen("TetrisV")} 
    else {scr_defaultscores("TetrisV")}
    
// Tetris Variety B-Type 
} else if global.GameSelection == rm_Tetris_Variety_BType {
    if file_exists("TetrisA.ini") {scr_iniopen("TetrisVB")} 
    else {scr_defaultscores("TetrisVB")}
    
// Pentris A-Type 
} else if global.GameSelection == rm_Pentris_AType {
    if file_exists("PentrisA.ini") {scr_iniopen("PentrisA")} 
    else {scr_defaultscores("PentrisA")}
    
// Pentris B-Type 
} else if global.GameSelection == rm_Pentris_BType {
    if file_exists("PentrisB.ini") {scr_iniopen("PentrisB")} 
    else {scr_defaultscores("PentrisB")}
    
// Pentris Variety 
} else if global.GameSelection == rm_Pentris_Variety {
    if file_exists("PentrisV.ini") {scr_iniopen("PentrisV")} 
    else {scr_defaultscores("PentrisV")}
    
// Pentris Variety B-Type 
} else if global.GameSelection == rm_Pentris_Variety_BType {
    if file_exists("PentrisVB.ini") {scr_iniopen("PentrisVB")} 
    else {scr_defaultscores("PentrisVB")}

} 
*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("TetrisA.ini");
ini_write_string(string(global.GameSelection), "0", ds_grid_write(grid));
ini_close();

ds_grid_destroy(grid);

room = rm_highscore
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if string_length(keyboard_string) &gt; 12 {keyboard_string = string_copy(keyboard_string, 1, 12);}

//if score &gt; ds_grid_get(HighScore_TetrisAType,1,9) {
    
    if keyboard_string != ""
    and keyboard_check_released(vk_enter)
    {
        ds_grid_set(grid,0,9,string(keyboard_string))
        global.CurrentName = keyboard_string
        ds_grid_set(grid,1,9,score)
        ds_grid_sort(grid,1,false)
        instance_destroy()
            
        
    }
    
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_score)
draw_set_halign(fa_left)

for(var i = 0; i &lt; 10; i++) {
    for(var j = 0; j &lt; 2; j++) {
        draw_text(x+(j*192),y+(i*48),ds_grid_get(grid,j,i))
    }
}

draw_text(x, y +520,"Please enter your name: " +string(keyboard_string))


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
